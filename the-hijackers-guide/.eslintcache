[{"C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\index.js":"1","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\App.js":"2","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\section.js":"3","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\controller.js":"4","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\reportWebVitals.js":"5","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\grid.js":"6","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\nav.js":"7","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\pages\\about.js":"8","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\pages\\guideline.js":"9","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\aboutHover.js":"10","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\menuItem.js":"11","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\cardColumn.js":"12","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\dataCard.js":"13"},{"size":563,"mtime":1611174915238,"results":"14","hashOfConfig":"15"},{"size":843,"mtime":1611933871430,"results":"16","hashOfConfig":"15"},{"size":2698,"mtime":1611936404692,"results":"17","hashOfConfig":"15"},{"size":5807,"mtime":1611936607458,"results":"18","hashOfConfig":"15"},{"size":375,"mtime":1611174915288,"results":"19","hashOfConfig":"15"},{"size":15410,"mtime":1611938144032,"results":"20","hashOfConfig":"15"},{"size":608,"mtime":1611937189079,"results":"21","hashOfConfig":"15"},{"size":12844,"mtime":1611937970075,"results":"22","hashOfConfig":"15"},{"size":133,"mtime":1611174915262,"results":"23","hashOfConfig":"15"},{"size":1329,"mtime":1611845337882,"results":"24","hashOfConfig":"15"},{"size":1069,"mtime":1611759357991,"results":"25","hashOfConfig":"15"},{"size":604,"mtime":1611933871437,"results":"26","hashOfConfig":"15"},{"size":1916,"mtime":1611933871449,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1um19c9",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\index.js",[],["59","60"],"C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\App.js",["61","62","63"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { Route, Switch, Link, useLocation } from \"react-router-dom\";\r\nimport GuidelinesPage from \"./pages/guidelinesPage\";\r\nimport Guideline from \"./pages/guideline\";\r\nimport Onboarding from \"./pages/onboarding\";\r\nimport About from \"./pages/about\";\r\nimport Nav from \"./components/nav\";\r\n\r\nfunction App() {\r\n  let location = useLocation();\r\n  let background = location.state && location.state.background;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {location.pathname !== \"/\" && <Nav />}\r\n      <Switch location={background || location}>\r\n        <Route exact path=\"/\" children={<Onboarding />} />\r\n        <Route path=\"/guidelines\" children={<GuidelinesPage />} />\r\n        <Route path=\"/disclosure\" children={<About />} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["64","65"],"C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\section.js",[],"C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\controller.js",["66"],"C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\reportWebVitals.js",[],"C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\grid.js",["67"],"import { React, useState, useRef, useEffect } from \"react\";\r\nimport Controller from \"../components/controller\";\r\nimport DataCard from \"../components/dataCard\";\r\nimport Lottie from \"react-lottie\";\r\nimport lockAnimation from \"../lottie/lock_animation.json\";\r\n\r\nfunction Grid(props) {\r\n  let WindowSize = {\r\n    x: window.innerWidth,\r\n    y: window.innerHeight\r\n  };\r\n\r\n  const UNLOCK_TIME = {\r\n    \"01\": 210.5,\r\n    \"02\": 0,\r\n    \"03\": 0,\r\n    \"04\": 0\r\n  };\r\n\r\n  const CARD_DATA = {\r\n    \"01\": {\r\n      title: \"#WHITELIVESMATTER\",\r\n      originalDate: \"2020-06-02\",\r\n      hijackDate: \"2020-06-03\",\r\n      originalUsers: \"White supremacists\",\r\n      hijackUsers: \"K-pop stans\",\r\n      originalAim: \"Support white supremacy\",\r\n      hijackAim: \"Support BLM movement\",\r\n      postCount: \"> 94.200\",\r\n      platforms: \"Twitter\",\r\n      timeRange: \"1 day\",\r\n      tactic: \"Flooding\"\r\n    },\r\n    \"02\": {\r\n      title: \"#ProudBoys\",\r\n      originalDate: \"2020-10-01\",\r\n      hijackDate: \"2020-10-02\",\r\n      originalUsers: \"Donald Trump supporters\",\r\n      hijackUsers: \"LGBTQ+ community\",\r\n      originalAim: \"Support the Proud Boys political group\",\r\n      hijackAim: \"Support LGBTQ+ Community\",\r\n      postCount: \"Unknown\",\r\n      platforms: \"Twitter Instagram TikTok\",\r\n      timeRange: \"1 day\",\r\n      tactic: \"Flipping\"\r\n    },\r\n    \"03\": {\r\n      title: \"#WHITELIVESMATTER\",\r\n      originalDate: \"2020-06-02\",\r\n      hijackDate: \"2020-06-03\",\r\n      originalUsers: \"White supremacists\",\r\n      hijackUsers: \"K-pop stans\",\r\n      originalAim: \"Support white supremacy\",\r\n      hijackAim: \"Support BLM movement\",\r\n      postCount: \"> 94.200\",\r\n      platforms: \"Twitter\",\r\n      timeRange: \"1 day\",\r\n      tactic: \"Flooding\"\r\n    },\r\n    \"04\": {\r\n      title: \"#WHITELIVESMATTER\",\r\n      originalDate: \"2020-06-02\",\r\n      hijackDate: \"2020-06-03\",\r\n      originalUsers: \"White supremacists\",\r\n      hijackUsers: \"K-pop stans\",\r\n      originalAim: \"Support white supremacy\",\r\n      hijackAim: \"Support BLM movement\",\r\n      postCount: \"> 94.200\",\r\n      platforms: \"Twitter\",\r\n      timeRange: \"1 day\",\r\n      tactic: \"Flooding\"\r\n    }\r\n  };\r\n\r\n  let playerControllerHeight = 56;\r\n  let gridWidth = ((WindowSize.y - playerControllerHeight) / 9) * 16;\r\n  let gridHeight = WindowSize.y - playerControllerHeight;\r\n  let gridLeft = -1;\r\n  const handlerRadius = 20;\r\n  const [isLocked, setLocked] = useState(true);\r\n\r\n  const [handlerPos, setHandlerPos] = useState({\r\n    x: (gridWidth / 3) * 2 - handlerRadius,\r\n    y: (gridHeight / 3) * 2 - handlerRadius\r\n  });\r\n  const [movingHandler, setMovingHandler] = useState(false);\r\n  const [movingControllerHandler, setMovingControllerHandler] = useState(false);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [neverPlayed, setNeverPlayed] = useState(true);\r\n  const [videoCurrentTime, setCurrentTime] = useState(0);\r\n  const [videoDuration, setVideoDuration] = useState(0);\r\n  const [volume, setVolume] = useState(1);\r\n\r\n  const video1 = useRef(null);\r\n  const video2 = useRef(null);\r\n  const video3 = useRef(null);\r\n  const video4 = useRef(null);\r\n  const video5 = useRef(null);\r\n  const video6 = useRef(null);\r\n\r\n  const videoRefs = [\r\n    video1.current,\r\n    video2.current,\r\n    video3.current,\r\n    video4.current,\r\n    video5.current,\r\n    video6.current\r\n  ];\r\n\r\n  const moving = useRef(false);\r\n  const time = useRef(0);\r\n\r\n  const lockOptions = {\r\n    animationData: lockAnimation,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\"\r\n    }\r\n  };\r\n\r\n  function changeColor(e, color) {\r\n    if (!isLocked) {\r\n      e.target.style.backgroundColor = color;\r\n    }\r\n  }\r\n\r\n  function toggleGrab(e) {\r\n    e.preventDefault();\r\n    if (!isLocked) {\r\n      if (movingHandler) {\r\n        setMovingHandler(false);\r\n      } else {\r\n        setMovingHandler(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleMouseMove(e) {\r\n    if (movingHandler) {\r\n      if (gridLeft === -1) {\r\n        gridLeft = document.getElementById(\"grid\").getBoundingClientRect().left;\r\n      }\r\n      let mousePos = {\r\n        x: e.pageX - gridLeft - handlerRadius,\r\n        y: e.pageY - handlerRadius\r\n      };\r\n      setHandlerPos({\r\n        x: mousePos.x,\r\n        y: mousePos.y\r\n      });\r\n    } else if (movingControllerHandler) {\r\n      if (gridLeft === -1) {\r\n        gridLeft = document.getElementById(\"grid\").getBoundingClientRect().left;\r\n      }\r\n      let mousePos = e.pageX - gridLeft;\r\n      if (mousePos <= gridWidth && mousePos >= 0) {\r\n        handleChange((mousePos * videoDuration) / gridWidth);\r\n      } else if (mousePos < 0) {\r\n        handleChange(0);\r\n      } else if (mousePos > gridWidth) {\r\n        handleChange(videoDuration);\r\n      }\r\n    }\r\n  }\r\n\r\n  function getVideoDuration(e) {\r\n    setVideoDuration(e.target.duration);\r\n    console.log(e.target.duration);\r\n  }\r\n\r\n  let playVideos = function() {\r\n    if (neverPlayed) {\r\n      setNeverPlayed(false);\r\n    }\r\n    if (!isPlaying) {\r\n      for (let i = 0; i < videoRefs.length; i++) {\r\n        if (videoRefs[i] !== null) {\r\n          videoRefs[i].play();\r\n        }\r\n      }\r\n      setIsPlaying(true);\r\n    } else {\r\n      for (let i = 0; i < videoRefs.length; i++) {\r\n        if (videoRefs[i] !== null) {\r\n          videoRefs[i].pause();\r\n        }\r\n      }\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  function handleOnPlay(e) {\r\n    if (videoCurrentTime !== e.target.currentTime && moving.current === false) {\r\n      setCurrentTime(e.target.currentTime);\r\n    }\r\n    if (videoCurrentTime >= UNLOCK_TIME[props.sectionId] && isLocked) {\r\n      setLocked(false);\r\n    }\r\n    if (video1.current.volume !== volume) {\r\n      video1.current.volume = volume;\r\n    }\r\n  }\r\n\r\n  let handleChange = function(value) {\r\n    console.log(value);\r\n    setCurrentTime(value);\r\n    time.current = value;\r\n    for (let i = 0; i < videoRefs.length; i++) {\r\n      if (videoRefs[i] !== null) {\r\n        videoRefs[i].currentTime = time.current;\r\n      }\r\n    }\r\n  };\r\n\r\n  let clickOnSlider = function(e) {\r\n    if (gridLeft === -1) {\r\n      gridLeft = document.getElementById(\"grid\").getBoundingClientRect().left;\r\n    }\r\n    let mousePos = e.pageX - gridLeft;\r\n    if (mousePos <= gridWidth && mousePos >= 0) {\r\n      handleChange((mousePos * videoDuration) / gridWidth);\r\n    } else if (mousePos < 0) {\r\n      handleChange(0);\r\n    } else if (mousePos > gridWidth) {\r\n      handleChange(videoDuration);\r\n    }\r\n  };\r\n\r\n  let ungrab = function() {\r\n    console.log(\"should ungrab\");\r\n    setMovingHandler(false);\r\n    setMovingControllerHandler(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", ungrab);\r\n\r\n    // cleanup this component\r\n    return () => {\r\n      window.removeEventListener(\"mouseup\", ungrab);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex-wrapper\" onMouseMove={event => handleMouseMove(event)}>\r\n      <div\r\n        className=\"flex-wrapper fadeIn\"\r\n        style={{ backgroundColor: props.color, flexDirection: \"column\" }}\r\n      >\r\n        <div\r\n          className=\"grid\"\r\n          id=\"grid\"\r\n          style={{\r\n            width: gridWidth,\r\n            height: gridHeight,\r\n            borderWidth: 0\r\n          }}\r\n        >\r\n          <div\r\n            className=\"grid-container\"\r\n            style={{ height: handlerPos.y + handlerRadius }}\r\n          >\r\n            <div\r\n              className=\"grid-unit\"\r\n              style={{\r\n                width: handlerPos.x + handlerRadius,\r\n                borderTopWidth: 0,\r\n                borderLeftWidth: 0\r\n              }}\r\n            >\r\n              <video\r\n                style={{ minWidth: (gridWidth / 3) * 2 }}\r\n                ref={video1}\r\n                onTimeUpdate={event => handleOnPlay(event)}\r\n                onDurationChange={event => getVideoDuration(event)}\r\n                onEnded={() => {\r\n                  setIsPlaying(false);\r\n                }}\r\n              >\r\n                <source\r\n                  src={process.env.PUBLIC_URL +\r\n                    \"/assets/section\" +\r\n                    props.sectionId +\r\n                    \"/Video\" +\r\n                    props.sectionId +\r\n                    \"-Box1.mp4\"\r\n                  }\r\n                />\r\n              </video>\r\n              {neverPlayed && (\r\n                <div\r\n                  className=\"play-button-large-container\"\r\n                  onClick={() => {\r\n                    playVideos();\r\n                  }}\r\n                >\r\n                  <div className=\"play-button-large\">\r\n                    <img alt=\"play\" src={process.env.PUBLIC_URL + \"/assets/play_button.svg\"} />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              className=\"double-container vertical\"\r\n              style={{\r\n                width: gridWidth - (handlerPos.x + handlerRadius),\r\n                borderTopWidth: 0\r\n              }}\r\n            >\r\n              <div\r\n                className=\"grid-unit half\"\r\n                style={{ borderTopWidth: 0, borderRightWidth: 0 }}\r\n              >\r\n                <video ref={video2} currentTime={videoCurrentTime}>\r\n                  <source\r\n                    src={process.env.PUBLIC_URL +\r\n                      \"/assets/section\" +\r\n                      props.sectionId +\r\n                      \"/Video\" +\r\n                      props.sectionId +\r\n                      \"-Box2.mp4\"\r\n                    }\r\n                  />\r\n                </video>\r\n              </div>\r\n              <div className=\"grid-unit half\" style={{ borderRightWidth: 0 }}>\r\n                {videoCurrentTime <= UNLOCK_TIME[props.sectionId] - 10 && (\r\n                  <video ref={video3}>\r\n                    <source\r\n                      src={process.env.PUBLIC_URL +\r\n                        \"/assets/section\" +\r\n                        props.sectionId +\r\n                        \"/Video\" +\r\n                        props.sectionId +\r\n                        \"-Box3.mp4\"\r\n                      }\r\n                    />\r\n                  </video>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"grid-container\"\r\n            style={{\r\n              height: gridHeight - (handlerPos.y + handlerRadius),\r\n              borderBottom: 0\r\n            }}\r\n          >\r\n            <div\r\n              className=\"double-container horizontal\"\r\n              style={{ width: handlerPos.x + handlerRadius }}\r\n            >\r\n              <div\r\n                className=\"grid-unit half\"\r\n                style={{ borderBottomWidth: 0, borderLeftWidth: 0 }}\r\n              >\r\n                {videoCurrentTime <= UNLOCK_TIME[props.sectionId] - 10 && (\r\n                  <video ref={video4}>\r\n                    <source\r\n                      src={process.env.PUBLIC_URL +\r\n                        \"/assets/section\" +\r\n                        props.sectionId +\r\n                        \"/Video\" +\r\n                        props.sectionId +\r\n                        \"-Box4.mp4\"\r\n                      }\r\n                    />\r\n                  </video>\r\n                )}\r\n                <div\r\n                  className=\"content-container bottom-left\"\r\n                  style={{ width: gridWidth / 3, height: (gridHeight / 3) * 2 }}\r\n                >\r\n                  <DataCard\r\n                    color={props.color}\r\n                    hashtagName={CARD_DATA[props.sectionId].title}\r\n                    originalDate={CARD_DATA[props.sectionId].originalDate}\r\n                    hijackDate={CARD_DATA[props.sectionId].hijackDate}\r\n                    originalUsers={CARD_DATA[props.sectionId].originalUsers}\r\n                    hijackUsers={CARD_DATA[props.sectionId].hijackUsers}\r\n                    originalAim={CARD_DATA[props.sectionId].originalAim}\r\n                    hijackAim={CARD_DATA[props.sectionId].hijackAim}\r\n                    postCount={CARD_DATA[props.sectionId].postCount}\r\n                    platforms={CARD_DATA[props.sectionId].platforms}\r\n                    timeRange={CARD_DATA[props.sectionId].timeRange}\r\n                    tactic={CARD_DATA[props.sectionId].tactic}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"grid-unit half\" style={{ borderBottomWidth: 0 }}>\r\n                {videoCurrentTime <= UNLOCK_TIME[props.sectionId] - 10 && (\r\n                  <video ref={video5}>\r\n                    <source\r\n                      src={process.env.PUBLIC_URL +\r\n                        \"/assets/section\" +\r\n                        props.sectionId +\r\n                        \"/Video\" +\r\n                        props.sectionId +\r\n                        \"-Box5.mp4\"\r\n                      }\r\n                    />\r\n                  </video>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"grid-unit\"\r\n              style={{\r\n                width: gridWidth - (handlerPos.x + handlerRadius),\r\n                borderBottomWidth: 0,\r\n                borderRightWidth: 0\r\n              }}\r\n            >\r\n              {videoCurrentTime <= UNLOCK_TIME[props.sectionId] - 10 && (\r\n                <video ref={video6}>\r\n                  <source\r\n                    src={process.env.PUBLIC_URL +\r\n                      \"/assets/section\" +\r\n                      props.sectionId +\r\n                      \"/Video\" +\r\n                      props.sectionId +\r\n                      \"-Box6.mp4\"\r\n                    }\r\n                  />\r\n                </video>\r\n              )}\r\n              <div\r\n                className=\"content-container bottom-right\"\r\n                style={{\r\n                  width: (gridWidth / 3) * 2,\r\n                  height: (gridHeight / 3) * 2\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"handler\"\r\n            style={{ left: handlerPos.x, top: handlerPos.y }}\r\n            onMouseDown={toggleGrab}\r\n            onMouseEnter={event => changeColor(event, props.color)}\r\n            onMouseOut={event => changeColor(event, \"GhostWhite\")}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                left: -18,\r\n                top: -18,\r\n                opacity: 0.6,\r\n                pointerEvents: \"none\"\r\n              }}\r\n            >\r\n              <Lottie\r\n              options={{\r\n                loop: false,\r\n                autoplay: false,\r\n                animationData: lockAnimation,\r\n                rendererSettings: {\r\n                  preserveAspectRatio: \"xMidYMid slice\"\r\n                }\r\n              }}\r\n                height={72}\r\n                width={72}\r\n                isStopped={isLocked}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Controller\r\n          sectionId={props.sectionId}\r\n          width={gridWidth}\r\n          height={playerControllerHeight}\r\n          duration={videoDuration}\r\n          currentTime={videoCurrentTime}\r\n          playVideos={playVideos}\r\n          handleClick={clickOnSlider}\r\n          setMoving={setMovingControllerHandler}\r\n          setVolume={setVolume}\r\n          volume={volume}\r\n          isPlaying={isPlaying}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\nav.js",["68"],"import { Link, useLocation } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  const location = useLocation();\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <Link to=\"/guidelines\">\r\n        <div className=\"nav-button\">\r\n          <img alt=\"\" src={process.env.PUBLIC_URL + \"/assets/navButton.svg\"} /> <div>HOME</div>{\" \"}\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/disclosure\">\r\n        <div className=\"nav-button\">\r\n          <img alt=\"\" src={process.env.PUBLIC_URL + \"/assets/navButton.svg\"} /> <div>ABOUT</div>{\" \"}\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\pages\\about.js",[],"C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\pages\\guideline.js",[],"C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\aboutHover.js",[],"C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\menuItem.js",["69","70"],"C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\cardColumn.js",[],"C:\\Users\\loren\\OneDrive\\Documenti\\GitHub\\dd16-phase3-group2\\the-hijackers-guide\\src\\components\\dataCard.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":3,"column":25,"nodeType":"77","messageId":"78","endLine":3,"endColumn":29},{"ruleId":"75","severity":1,"message":"80","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":17},{"ruleId":"71","replacedBy":"81"},{"ruleId":"73","replacedBy":"82"},{"ruleId":"75","severity":1,"message":"83","line":14,"column":9,"nodeType":"77","messageId":"78","endLine":14,"endColumn":21},{"ruleId":"75","severity":1,"message":"84","line":113,"column":9,"nodeType":"77","messageId":"78","endLine":113,"endColumn":20},{"ruleId":"75","severity":1,"message":"85","line":4,"column":9,"nodeType":"77","messageId":"78","endLine":4,"endColumn":17},{"ruleId":"75","severity":1,"message":"86","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"87","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Guideline' is defined but never used.",["88"],["89"],"'LIGHT_COLORS' is assigned a value but never used.","'lockOptions' is assigned a value but never used.","'location' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]